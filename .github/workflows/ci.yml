name: Messaging App CI/CD

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]

# Set default permissions for all jobs with least privilege
permissions:
  contents: read       # Only read access to repository content
  actions: read        # Read access to actions
  checks: write        # Write access for test/coverage reports
  id-token: write      # Needed for upload artifacts
  security-events: read # For reading security issues

jobs:
  backend-build-and-test:
    name: Backend Build & Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: |
          cd messaging.app
          mvn -B package --file pom.xml

      - name: Run tests with coverage
        run: |
          cd messaging.app
          mvn test jacoco:report

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: 'messaging.app/target/surefire-reports/TEST-*.xml'
          fail_on_failure: true
          summary: true
          
      - name: Upload Backend Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-report
          path: messaging.app/target/site/jacoco/
          retention-days: 7
          
      - name: Coverage Report Summary
        run: |
          cd messaging.app
          echo "# Backend Test Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "## JaCoCo Report" >> $GITHUB_STEP_SUMMARY
          REPORT_PATH="target/site/jacoco/index.html"
          if [ -f "$REPORT_PATH" ]; then
            TOTAL_LINE=$(grep -o 'Total[^%]*%' "$REPORT_PATH" | head -1)
            echo "- $TOTAL_LINE" >> $GITHUB_STEP_SUMMARY
          else
            echo "- Coverage report not found" >> $GITHUB_STEP_SUMMARY
          fi

  frontend-build-and-test:
    name: Frontend Build & Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Run tests with coverage
        run: |
          cd frontend
          npm test -- --coverage
          
      - name: Upload Frontend Coverage Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: frontend-coverage-report
          path: frontend/coverage/
          retention-days: 7
          
      - name: Coverage Report Summary
        if: always()
        run: |
          cd frontend
          echo "# Frontend Test Coverage Summary" >> $GITHUB_STEP_SUMMARY
          if [ -d "coverage" ]; then
            echo "## Jest Coverage" >> $GITHUB_STEP_SUMMARY
            SUMMARY_FILE="coverage/coverage-summary.json"
            if [ -f "$SUMMARY_FILE" ]; then
              TOTAL=$(grep -o '"total":{[^}]*}' "$SUMMARY_FILE" | head -1)
              LINES=$(echo $TOTAL | grep -o '"lines":{[^}]*}' | head -1)
              STATEMENTS=$(echo $TOTAL | grep -o '"statements":{[^}]*}' | head -1)
              echo "- Lines: $(echo $LINES | grep -o '"pct":[0-9.]*' | cut -d':' -f2)%" >> $GITHUB_STEP_SUMMARY
              echo "- Statements: $(echo $STATEMENTS | grep -o '"pct":[0-9.]*' | cut -d':' -f2)%" >> $GITHUB_STEP_SUMMARY
            else
              echo "- Coverage summary not found" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "- Coverage directory not found" >> $GITHUB_STEP_SUMMARY
          fi

  lint:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Run ESLint
        run: |
          cd frontend
          npm run lint
        # If your lint script isn't set up, you can modify package.json or comment this out

      # Optional: Add a Java linter or code quality check for backend
      - name: Set up JDK for backend checks
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Run Checkstyle
        run: |
          cd messaging.app
          mvn checkstyle:check
        continue-on-error: true  # Optional: allows the workflow to continue even if checkstyle fails 